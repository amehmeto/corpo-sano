import { fetch } from 'apollo-server-env';
import { Logger } from 'apollo-server-types';
import { SupergraphManager, SupergraphSdlHookOptions } from '../../config';
export interface UplinkFetcherOptions {
    pollIntervalInMs: number;
    subgraphHealthCheck?: boolean;
    graphRef: string;
    apiKey: string;
    fetcher: typeof fetch;
    maxRetries: number;
    uplinkEndpoints: string[];
    logger?: Logger;
}
export declare class UplinkFetcher implements SupergraphManager {
    private config;
    private update?;
    private healthCheck?;
    private timerRef;
    private state;
    private errorReportingEndpoint;
    private compositionId?;
    constructor(options: UplinkFetcherOptions);
    initialize({ update, healthCheck }: SupergraphSdlHookOptions): Promise<{
        supergraphSdl: string;
        cleanup: () => Promise<void>;
    }>;
    private updateSupergraphSdl;
    private beginPolling;
    private poll;
    private logUpdateFailure;
}
//# sourceMappingURL=index.d.ts.map